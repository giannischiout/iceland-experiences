/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    categories: Category;
    cars: Car;
    brands: Brand;
    transmissions: Transmission;
    models: Model;
    'add-ons': AddOn;
    features: Feature;
    tents: Tent;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    cars: CarsSelect<false> | CarsSelect<true>;
    brands: BrandsSelect<false> | BrandsSelect<true>;
    transmissions: TransmissionsSelect<false> | TransmissionsSelect<true>;
    models: ModelsSelect<false> | ModelsSelect<true>;
    'add-ons': AddOnsSelect<false> | AddOnsSelect<true>;
    features: FeaturesSelect<false> | FeaturesSelect<true>;
    tents: TentsSelect<false> | TentsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    mainMenu: MainMenu;
  };
  globalsSelect: {
    mainMenu: MainMenuSelect<false> | MainMenuSelect<true>;
  };
  locale: 'en' | 'de' | 'es';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: string;
  name: string;
  slug?: string | null;
  description?: string | null;
  image: string | Media;
  /**
   * Optional site identifier if you want to group categories by site
   */
  siteKey?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cars".
 */
export interface Car {
  id: string;
  brand: string | Brand;
  name: string;
  slug?: string | null;
  description?: string | null;
  images?: (string | Media)[] | null;
  price: number;
  year: number;
  horsepower: number;
  transmission: 'Automatic' | 'Manual';
  fuelType: 'Petrol' | 'Diesel' | 'Electric' | 'Hybrid';
  seats?: number | null;
  sleepingCapacity?: number | null;
  siteKey?: string | null;
  available?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "brands".
 */
export interface Brand {
  id: string;
  name: string;
  slug?: string | null;
  description?: string | null;
  logo?: (string | null) | Media;
  /**
   * Optional identifier to filter brands per site.
   */
  siteKey?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "transmissions".
 */
export interface Transmission {
  id: string;
  label: string;
  tagline: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "models".
 */
export interface Model {
  id: string;
  brand: string | Brand;
  name: string;
  slug?: string | null;
  /**
   * Optional identifier to filter models per site.
   */
  siteKey?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "add-ons".
 */
export interface AddOn {
  id: string;
  name: string;
  slug: string;
  description?: string | null;
  basePrice?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "features".
 */
export interface Feature {
  id: string;
  name: string;
  slug: string;
  description?: string | null;
  icon?: (string | null) | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tents".
 */
export interface Tent {
  id: string;
  name: string;
  slug: string;
  description?: string | null;
  /**
   * Number of people this tent can sleep
   */
  sleeps: number;
  icon?: (string | null) | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: string | Category;
      } | null)
    | ({
        relationTo: 'cars';
        value: string | Car;
      } | null)
    | ({
        relationTo: 'brands';
        value: string | Brand;
      } | null)
    | ({
        relationTo: 'transmissions';
        value: string | Transmission;
      } | null)
    | ({
        relationTo: 'models';
        value: string | Model;
      } | null)
    | ({
        relationTo: 'add-ons';
        value: string | AddOn;
      } | null)
    | ({
        relationTo: 'features';
        value: string | Feature;
      } | null)
    | ({
        relationTo: 'tents';
        value: string | Tent;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  image?: T;
  siteKey?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cars_select".
 */
export interface CarsSelect<T extends boolean = true> {
  brand?: T;
  name?: T;
  slug?: T;
  description?: T;
  images?: T;
  price?: T;
  year?: T;
  horsepower?: T;
  transmission?: T;
  fuelType?: T;
  seats?: T;
  sleepingCapacity?: T;
  siteKey?: T;
  available?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "brands_select".
 */
export interface BrandsSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  logo?: T;
  siteKey?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "transmissions_select".
 */
export interface TransmissionsSelect<T extends boolean = true> {
  label?: T;
  tagline?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "models_select".
 */
export interface ModelsSelect<T extends boolean = true> {
  brand?: T;
  name?: T;
  slug?: T;
  siteKey?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "add-ons_select".
 */
export interface AddOnsSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  basePrice?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "features_select".
 */
export interface FeaturesSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  icon?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tents_select".
 */
export interface TentsSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  sleeps?: T;
  icon?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mainMenu".
 */
export interface MainMenu {
  id: string;
  bookNowLink: string;
  menu?:
    | {
        title: string;
        description: string;
        /**
         * Add an image to the card
         */
        withImage?: boolean | null;
        image?: (string | null) | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'menuCardImage';
      }[]
    | null;
  menuItems?:
    | {
        label: string;
        url: string;
        megaMenu?:
          | (
              | {
                  title: string;
                  /**
                   * Select up to 4 items to display
                   */
                  items?:
                    | (
                        | {
                            relationTo: 'cars';
                            value: string | Car;
                          }
                        | {
                            relationTo: 'categories';
                            value: string | Category;
                          }
                        | {
                            relationTo: 'brands';
                            value: string | Brand;
                          }
                      )[]
                    | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'fourItemList';
                }
              | {
                  image: string | Media;
                  links?:
                    | {
                        label?: string | null;
                        url?: string | null;
                        id?: string | null;
                      }[]
                    | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'imageWithLinks';
                }
              | {
                  title: string;
                  categories?: (string | Category)[] | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'categoryGrid';
                }
            )[]
          | null;
        id?: string | null;
      }[]
    | null;
  ourCars?: {
    categories?: (string | Category)[] | null;
    brands?: (string | Brand)[] | null;
    transmissions?: (string | Transmission)[] | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mainMenu_select".
 */
export interface MainMenuSelect<T extends boolean = true> {
  bookNowLink?: T;
  menu?:
    | T
    | {
        menuCardImage?:
          | T
          | {
              title?: T;
              description?: T;
              withImage?: T;
              image?: T;
              id?: T;
              blockName?: T;
            };
      };
  menuItems?:
    | T
    | {
        label?: T;
        url?: T;
        megaMenu?:
          | T
          | {
              fourItemList?:
                | T
                | {
                    title?: T;
                    items?: T;
                    id?: T;
                    blockName?: T;
                  };
              imageWithLinks?:
                | T
                | {
                    image?: T;
                    links?:
                      | T
                      | {
                          label?: T;
                          url?: T;
                          id?: T;
                        };
                    id?: T;
                    blockName?: T;
                  };
              categoryGrid?:
                | T
                | {
                    title?: T;
                    categories?: T;
                    id?: T;
                    blockName?: T;
                  };
            };
        id?: T;
      };
  ourCars?:
    | T
    | {
        categories?: T;
        brands?: T;
        transmissions?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}